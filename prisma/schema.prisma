generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Firm {
  id             String          @id @default(cuid()) @db.VarChar(25) // Explicit length is good practice
  display        String
  subdomain      String          @unique @default("boil")
  accessProfiles AccessProfile[]
  userFirms      UserFirm[]
  users          User[]
}

model AccessProfile {
  id             String     @id @default(cuid()) @db.VarChar(25) // Explicit length
  display        String
  managerUsers   Boolean    @default(false)
  manageProfiles Boolean    @default(false)
  manageFirm     Boolean    @default(false)
  firmId         String     @db.VarChar(25) // Match Firm.id type
  firm           Firm       @relation(fields: [firmId], references: [id], onDelete: Cascade)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  userFirms      UserFirm[]
}

model User {
  id        String     @id @default(cuid()) @db.VarChar(25) // Explicit length
  firstname String
  lastname  String
  password  String
  email     String     @unique
  userFirms UserFirm[]
  firms     Firm[]
}

model UserFirm {
  id              String        @id @default(cuid()) @db.VarChar(25) // Explicit length
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  firmId          String        @db.VarChar(25) // Match Firm.id type
  userId          String        @db.VarChar(25)
  accessProfileId String        @db.VarChar(25)
  firm            Firm          @relation(fields: [firmId], references: [id], onDelete: Cascade)
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessProfile   AccessProfile @relation(fields: [accessProfileId], references: [id], onDelete: Cascade)

  @@unique([userId, firmId])
}
